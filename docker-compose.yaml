services:
  # Our application frontend 3000
  web:
    build:
      context: ./frontend
    #ports:
    #  - "5173:5173"
    depends_on:
      - app
    env_file:
      - ./frontend/.env.prod
    network_mode: service:tailscale
    command: ["yarn", "dev", "--host"]

  # Our application backend 8000
  app:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG=True
    env_file:
      - ./backend/.env.prod
    #network_mode: service:tailscale
    command: ["fastapi", "dev", "src/app.py", "--port", "8000", "--host", "0.0.0.0"]
    # command: ["uvicorn", "src.app:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]
  
  # Our database 5432
  db:
    image: postgres:14.2-alpine
    ports:
      - "5432:5432"
    env_file:
      - ./backend/.env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data
    #network_mode: service:tailscale
  
  # A service to populate the database with SUS data
  populator:
    build:
      context: ./backend
    depends_on:
      - db
    env_file:
      - ./backend/.env.prod
    #network_mode: service:tailscale
    entrypoint: ["python", "scripts/populator.py", "--year", "2024", "--month", "09"]
    
  
  # The TS service to expose our frontend to the open internet
  tailscale:
    image: tailscale/tailscale:stable
    hostname: suspapp
    ports:
      - "5173:5173"
    #  - "8000:8000"
    #  - "5432:5432"
    volumes:
      - tsdata:/var/lib
      - /dev/net/tun:/dev/net/tun
      - ./config:/config
    cap_add:
      - net_admin
      - sys_module
    privileged: true
    env_file:
      - .env
    restart: unless-stopped
  
volumes:
  pgdata:
  tsdata:
